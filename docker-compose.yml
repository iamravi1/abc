version: "2"
services:
  api:
    image: iamravi1/notes-app-api:1.0
    container_name: notes-api
    ports:
      - 5000:3000
    environment:
      DB_URL: mongodb://db/notes
    networks:
      - my-network
  db:
    image: mongo:4.0-xenial
    container_name: db
    ports:
      - 27017:27017
    volumes:
      - notes:/data/db
    networks:
      - my-network
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - my-network
  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    networks:
      - my-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - my-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - my-network
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - my-network

  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    restart: unless-stopped
    privileged: true
    networks:
      - jenkins
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"

  jenkins-blueocean:
    image: iamravi1/myjenkins-blueocean:2.332.3-1
    container_name: jenkins-blueocean
    restart: unless-stopped
    networks:
      - jenkins
      - my-network
    environment:
      DOCKER_HOST: tcp://172.21.0.2:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    ports:
      - "8081:8080"
      - "50000:50000"

volumes:
  prom_data:
  notes:
  jenkins_home:
  jenkins-data:
  jenkins-docker-certs:

networks:
  my-network:
  jenkins:
    driver: bridge
